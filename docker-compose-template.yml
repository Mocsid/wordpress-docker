version: '3.1'

services:
  wordpress:
    build: ../../common
    restart: always
    ports:
      - "8081:80"  # Port mapping for WordPress
    env_file:
      - ../../common/.env  # Environment variables for WordPress
    volumes:
      - ../../common/wordpress:/var/www/html  # WordPress core files
      - ../../common/plugins/woocommerce:/var/www/html/wp-content/plugins/woocommerce  # WooCommerce plugin
      - ../../common/plugins/MOC-WP-Logger-1.0.0:/var/www/html/wp-content/plugins/MOC-WP-Logger-1.0.0  # Logger plugin
      - ./plugin/{instance-name}:/var/www/html/wp-content/plugins/{instance-name}  # Instance-specific plugin
      - ../../common/custom-scripts:/var/www/html/custom-scripts  # Custom scripts
    depends_on:
      db:
        condition: service_healthy  # Ensure DB is healthy before starting
      mailhog:
        condition: service_healthy  # Ensure MailHog is healthy before starting
    networks:
      - wordpress-network
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "512M"

  db:
    image: mysql:5.7
    restart: always
    env_file:
      - ../../common/.env  # Environment variables for MySQL
    environment:
      MYSQL_ROOT_PASSWORD: somerootpassword
      MYSQL_DATABASE: exampledb
      MYSQL_USER: exampleuser
      MYSQL_PASSWORD: examplepass
    volumes:
      - db_data_{instance-name}:/var/lib/mysql  # Persistent storage for MySQL
      - ../../common/init.sql:/docker-entrypoint-initdb.d/init.sql  # SQL initialization script
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]  # Healthcheck for MySQL
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "256M"

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"  # SMTP server port
      - "8025:8025"  # Web interface port
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8025"]  # Check if MailHog web UI is up
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - wordpress-network

networks:
  wordpress-network:
    driver: bridge  # Bridge network to connect services

volumes:
  db_data_{instance-name}:  # Volume for storing MySQL data
